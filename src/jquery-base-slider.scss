/***********************************************
jquery-base-slider.scss, Description from README.md

    (c) 2015, FCOO

    https://github.com/fcoo/jquery-base-slider
    https://github.com/fcoo

There are four different types of sliders:
default, small, round and range

The type is set by adding the same class-name to the outer <span> eq. <span class="base-slider round....">

The scss is divided in two parts: First the common part equal for all types and then a specified part for the different types

************************************************/
//BOURBON - http://bourbon.io version 5
@import "../bower_components/bourbon/core/bourbon";

//'Global' variables
$border-color    : rgb(175,179,187);
$shadow-color    : rgb(175,179,187);
$background-color: rgb(209,214,224);

$border-width   : 1px;
$border         : $border-width solid $border-color;
$border-black   : $border-width solid black;

$border-color_hover: #007bff;

//marker = small boxes over min- and max and from- and to-handle
$marker-top               : 0px;
$marker-font-size         : 10px;
$marker-line-height       : 1.333;
$marker-top-bottom-padding: 1px;
$marker-left-right-padding: 5px;
$marker-stick-height      : 3px;

$marker-height            : $border-width + $marker-top-bottom-padding + $marker-font-size*$marker-line-height + $marker-top-bottom-padding + $border-width + $marker-stick-height;

$marker-padding         : $marker-top-bottom-padding $marker-left-right-padding;
$marker-border-radius   : 4px;


//handle
$handle-top          : $marker-top + $marker-height;
$handle-top-no-marker: $marker-top;

//The line
$line-height        : 6px;

$line-border-radius : 2px;

//The line when it is a range-slider
$range-line-top          : $marker-height;
$range-line-top-no-marker: 0px;

//Special: Pin marking a value
$pin-height    : 48 / 28 * $line-height;  //The height of the pin used to mark the range-value. Calculated to fit with width=$line-height
$pin-margin-top: -0.8 * $pin-height;

$range-value-line-top: $marker-height;


//Ticks and text on grids
$tick-width       : 1px;
$tick-height-minor: $line-height;
$tick-height      : 1.5 * $tick-height-minor;
$label-font-size  : 10px;
$margin           : 2px;

$text-padding    : $line-border-radius;

$label-height    : $border-width + $text-padding + $label-font-size + $text-padding + $border-width;


$box-shadow: 1px 1px 1px 0px rgba(255,255,255,0.75), -1px 1px 1px 0px rgba(255,255,255,0.75);

.base-slider-container-outer {
    left      : 0;
    width     : 100%;
    height    : 100%;
    overflow-x: hidden;

    .base-slider-container-full-width {
        position  : relative;
        left      : 0;
        overflow-y: visible;
    }
}

/***************************************************************
COMMON STYLE
***************************************************************/
.base-slider-container {
    position   : relative;
    display    : block;
    user-select: none;
    box-sizing : border-box;

    //width and margin of .base-slider-container is set after the widest handle is found
    .line-background {
        position: absolute;
        display : block;
        width   : 100%;
        top     : 0;
    }

    .line {
        position: relative;
        display : block;
        width   : 100%;
        height  : $line-height - 2*$border-width; //Outer-width = $line-height;
        left    : -1*$border-width;

        overflow  : hidden;
        outline   : none !important;
        box-sizing: content-box;        //Important as it makes the inner width = 100%
        background-color: transparent; //$background-color;

        border: $border;
        @include border-left-radius($line-border-radius);
        @include border-right-radius($line-border-radius);

        .line-color {
            position  : absolute;
            display: block;
            height : 100%;

            &:first-child {
                @include border-left-radius($line-border-radius);
            }
            &:last-child:not(:first-child) {
                @include border-right-radius($line-border-radius);
            }
        }
    }

    //The handle
    .handle {
        position: absolute;
        display : block;
        z-index : 10;
        top     : $handle-top;

        background-size: 100% 100%;
        background-repeat: no-repeat;

        background-attachment: local;
        background-position: 0% 0%;

        &.type-last { z-index: 12; }

    } //end of .handle

    //Special version when a pin is added: using font-icons instead of background-image
    .handle.pin {
        position: absolute;
        z-index : 100;

        height     : $pin-height !important;
        margin-top : $pin-margin-top;
        width      : 16px;
        margin-left: -8px; //To center

        font-size : $pin-height;
        text-align: center;

        background-image: none !important;
    }


    //Marker: single, from, to, min, and max-marker
    .marker-outer {
        position   : absolute;
        top        : $marker-top;
        z-index    : 2;
        cursor     : default;
        font-family: Arial, sans-serif;
        font-size  : $marker-font-size;

        .marker {
            box-sizing : border-box;
            width      : 100%;
            height     : 100%;
            margin-left: -50%;
            padding    : 0;
        }

        //Black arrow below if the moving marker is framed
        &.frame .marker:after {
            position   : absolute;
            display    : block;
            top        : 100%;
            left       : 0;
            width      : 0;
            height     : 0;
            margin-left: -1*$marker-stick-height;

            content : "";
            overflow: hidden;

            border          : $marker-stick-height solid transparent;
            border-top-color: black;
        }

        .marker-text {
            display      : inline-block;
            cursor       : inherit;
            box-sizing   : border-box;
            line-height  : $marker-line-height;;
            padding      : $marker-padding;
            border       : $border-width solid transparent;
            border-radius: $marker-border-radius;

            white-space: nowrap;
            text-shadow: none;
        }

        &.min-max .marker-text {
            color           : #555;
            background-color: $background-color;
            border          : $border;
            border-radius   : $marker-border-radius;
        }

        &.single-from-to .marker-text {
            color      : #111;
        }
        &.single-from-to.frame .marker-text {
            background   : white;
            border       : $border-black;
        }
    } //end of .marker-outer

    //Style for :hover and .hover on markers
    html.mouse-hover &.active {
        .marker-outer:hover, .marker-outer.hover {
            &.single-from-to.frame, &.min-max {
                .marker-text {
                    border-color: $border-color_hover;
                }
            }
        }
    }
} //end of .base-slider-container

//**************************************

.grid-canvas {
    position: absolute;
    bottom  : 0;
    z-index : 3;
    cursor  : default;
}

.grid {
    position: absolute;
    bottom  : 0;
    left    : 0;
    z-index : 2;
    width   : 100%;
    height  : $tick-height + $label-height;
    cursor  : default;
//REMOVED IN V6    .grid-pol {
//REMOVED IN V6        position  : absolute;
//REMOVED IN V6        z-index   : 2;
//REMOVED IN V6        top       : 0;
//REMOVED IN V6        left      : 0;
//REMOVED IN V6        width     : $tick-width;
//REMOVED IN V6        height    : $tick-height-minor;
//REMOVED IN V6        background: #555555;
//REMOVED IN V6        box-shadow: $box-shadow;
//REMOVED IN V6        &.major {
//REMOVED IN V6            height    : $tick-height;
//REMOVED IN V6            background: black;
//REMOVED IN V6        }
//REMOVED IN V6    }
//REMOVED IN V6
//REMOVED IN V6    .grid-label-outer {
//REMOVED IN V6display: none;
//REMOVED IN V6        position: absolute;
//REMOVED IN V6        z-index : 2;
//REMOVED IN V6        top     : $tick-height;
//REMOVED IN V6        height  : $label-height;
//REMOVED IN V6
//REMOVED IN V6        .grid-label {
//REMOVED IN V6            box-sizing : border-box;
//REMOVED IN V6            width      : 100%;
//REMOVED IN V6            height     : 100%;
//REMOVED IN V6            margin-left: -50%;
//REMOVED IN V6            padding    : 0;
//REMOVED IN V6            .grid-label-text {
//REMOVED IN V6                cursor       : inherit;
//REMOVED IN V6                display      : inline-block;
//REMOVED IN V6                box-sizing   : border-box;
//REMOVED IN V6                line-height  : 1;
//REMOVED IN V6                height       : 100%;
//REMOVED IN V6                padding      : $text-padding;
//REMOVED IN V6                border       : $border-width solid transparent;
//REMOVED IN V6                border-radius: $marker-border-radius;
//REMOVED IN V6
//REMOVED IN V6                &.frame {
//REMOVED IN V6                    border-color: $border-color;
//REMOVED IN V6                }
//REMOVED IN V6            }
//REMOVED IN V6        }
//REMOVED IN V6    }

    //Special version for grid.label-between-ticks
    &.label-between-ticks {
        height: max($tick-height, $label-font-size);
//REMOVED IN V6        .grid-label-outer {
//REMOVED IN V6            top   : 0;
//REMOVED IN V6            height: $label-font-size;
//REMOVED IN V6
//REMOVED IN V6            .grid-label {
//REMOVED IN V6                .grid-label-text {
//REMOVED IN V6                    padding      : 0;
//REMOVED IN V6                    border-radius: 0;
//REMOVED IN V6                    border       : 0;
//REMOVED IN V6                }
//REMOVED IN V6            }
//REMOVED IN V6        }
    }

//REMOVED IN V6    //Text-style for grid-label outside .grid-label-outer to allow used with textElement in BaseSlider
//REMOVED IN V6    .grid-label {
//REMOVED IN V6display: none;
//REMOVED IN V6        background-color: transparent;
//REMOVED IN V6        left       : 0;
//REMOVED IN V6        white-space: nowrap;
//REMOVED IN V6        text-align : center;
//REMOVED IN V6        font-family: Arial, sans-serif;
//REMOVED IN V6
//REMOVED IN V6        font-size  : $label-font-size;
//REMOVED IN V6        line-height: 1;
//REMOVED IN V6        font-weight: bold;
//REMOVED IN V6        &.minor  { font-weight: normal; color: #555555;}
//REMOVED IN V6        &.italic { font-style: italic; }
//REMOVED IN V6
//REMOVED IN V6        color : #000;
//REMOVED IN V6    }

    .grid-color {
        position: absolute;
        z-index : 1;
        top     : 0;
        height  : $tick-height;

        font-size: 2*$tick-height;

        text-align : center;
        line-height: $tick-height;
        overflow: hidden;

        &.gt-max {
            left: 100%;
            //Create triangle pointing to the right
            width: 0;
            height: 0;
            border: 0 solid transparent;
            border-bottom-width: $tick-height / 2;
            border-top-width: $tick-height / 2;
            border-left: $tick-height solid black;
        }
        &.lt-min {
            left: -1*$tick-height;
            //Create triangle pointing to the left
            width: 0;
            height: 0;
            border: 0 solid transparent;
            border-top-width: $tick-height / 2;
            border-bottom-width: $tick-height / 2;
            border-right: $tick-height solid black;
        }
    }
} //end of .grid

// HER> //Special style for grid-label-text:hover when not dragging any handle
// HER> html.mouse-hover .base-slider-container.active:not(.dragging) .grid-label.clickable:hover .grid-label-text {
// HER>     border-color: $border-color_hover;
// HER> }

.disabled {
    opacity: 0.4;
}

.hidden-input {
    position    : absolute !important;
    display     : block !important;
    top         : 0 !important;
    left        : 0 !important;
    width       : 0 !important;
    height      : 0 !important;
    font-size   : 0 !important;
    line-height : 0 !important;
    padding     : 0 !important;
    margin      : 0 !important;
    outline     : none !important;
    z-index     : -9999 !important;
    background  : none !important;
    border-style: solid !important;
    border-color: transparent !important;
}

/***************************************************************
STYLE FOR SPECIFIC TYPE
***************************************************************/
//Find the widest handle and use if as margin for all sliders
$max-handle-width: 1px;

$handle-type-list: horizontal, vertical, down, up, right, left, round, fixed, range;

@each $handle-type in $handle-type-list {
    $handle-dim   : 24px;
    $img-width    : 16px;
    $img-height   : 24px;

    $handle-width : null;
    $handle-height: null;
    $line-top-relative-to-handle: null;
    $grid-top                   : null;

    $handle-back-ground-image         : null;
    $handle-back-ground-image-hover   : null;
    $handle-back-ground-image-to      : null;
    $handle-back-ground-image-to-hover: null;



    @if $handle-type == horizontal {
        $handle-back-ground-image      : 'handle.horizontal.svg';
        $handle-back-ground-image-hover: 'handle.horizontal.hover.svg';;
    }
    @if $handle-type == vertical {
        $img-width : 24px;
        $img-height: 16px;
        $handle-back-ground-image      : 'handle.vertical.svg';
        $handle-back-ground-image-hover: 'handle.vertical.hover.svg';;
    }

    @if $handle-type == down {
        $handle-back-ground-image      : 'handle.down.svg';
        $handle-back-ground-image-hover: 'handle.down.hover.svg';;
    }
    @if $handle-type == up {
        $handle-back-ground-image      : 'handle.up.svg';
        $handle-back-ground-image-hover: 'handle.up.hover.svg';;
    }
    @if $handle-type == right {
        $img-width : 24px;
        $img-height: 16px;
        $handle-back-ground-image      : 'handle.right.svg';
        $handle-back-ground-image-hover: 'handle.right.hover.svg';;
    }
    @if $handle-type == left {
        $img-width : 24px;
        $img-height: 16px;
        $handle-back-ground-image      : 'handle.left.svg';
        $handle-back-ground-image-hover: 'handle.left.hover.svg';;
    }

    @if $handle-type == round {
        $img-width : 16px;
        $img-height: 16px;
        $handle-dim: 20px;

        $handle-back-ground-image      : 'handle.round.svg';
        $handle-back-ground-image-hover: 'handle.round.hover.svg';;
    }

    @if $handle-type == fixed {
        $handle-dim: 20px;

        $handle-back-ground-image: 'handle.fixed.svg';

        $line-top-relative-to-handle: $margin;
        $grid-top   : $handle-top + $line-top-relative-to-handle + $line-height;
    }

    @if $handle-type == range {
        $img-width : 6px;
        $img-height: 6px;
        $handle-dim: $line-height;

        $handle-back-ground-image   : 'handle.range.from.svg';
        $handle-back-ground-image-to: 'handle.range.to.svg';

        $line-top-relative-to-handle: 0;
    }


    $factor: 0;
    @if $img-height > $img-width {
        $factor: $handle-dim / $img-height;
    } @else {
        $factor: $handle-dim / $img-width;
    }

    $handle-width : $img-width * $factor;
    $max-handle-width: max( $max-handle-width, $handle-width );
    $handle-height: $img-height * $factor;

    @if $line-top-relative-to-handle == null {
        $line-top-relative-to-handle: $handle-height/2 - $line-height/2;
    }

    @if $grid-top == null {
        $grid-top: $handle-top + $handle-height;
    }

    $lineTop        : $handle-top + $line-top-relative-to-handle;
    $lineTopNoMarker: $handle-top-no-marker + $line-top-relative-to-handle;

    $handle-back-ground-image: url("images/#{$handle-back-ground-image}");
    @if $handle-back-ground-image-hover != null {
        $handle-back-ground-image-hover: url("images/#{$handle-back-ground-image-hover}");
    }

    @if $handle-back-ground-image-to != null {
        $handle-back-ground-image-to: url("images/#{$handle-back-ground-image-to}");
    }
    @if $handle-back-ground-image-to-hover != null {
        $handle-back-ground-image-to-hover: url("images/#{$handle-back-ground-image-to-hover}");
    }

    //The style for different handle-type
    .base-slider-container.#{$handle-type} {

        //width, height and postion
        .line-background {
            height: $handle-top + $handle-height;
        }

        .line {
            top: $lineTop;
        }

        //Handle
        .handle {
            box-sizing: border-box;
            width : $handle-width;
            height: $handle-height;
            margin-left: -0.5*$handle-width;

            //If there are different bg-image for from and to-handle => create style for each ELSE common style
            @if $handle-back-ground-image-to == null {
                background-image: $handle-back-ground-image;
            }
            @else {
                &.from {
                    background-image: $handle-back-ground-image;
                }
                &.to {
                    background-image: $handle-back-ground-image-to;
                }
            }
        }

        @if $handle-back-ground-image-hover != null {
            //hover on handle but only if it is active (not read-only)
            html.mouse-hover &.active {
                .handle:hover, .handle.hover  {
                    //If there are different bg-image for from and to-handle => create style for each ELSE common style
                    @if $handle-back-ground-image-to-hover == null {
                        background-image: $handle-back-ground-image-hover;
                    }
                    @else {
                        &.from {
                            background-image: $handle-back-ground-image-hover;
                        }
                        &.to {
                            background-image: $handle-back-ground-image-to-hover;
                        }
                    }
                }
            }
        }

        //Pin
        .pin { top: $lineTop; }

        //The grid with ticks and text/labels
        .grid { top: $grid-top; }


        //Adjust grid position if ticks are on the line (ticksOnLine = true)
        &.ticks-on-line {
            .grid             { top: $lineTop;         }
            &.no-marker .grid { top: $lineTopNoMarker; }
        }

        //Adjust all top-position if there are no marker
        &.no-marker {
            .line,
            .pin    { top: $lineTopNoMarker !important;        }
            .handle { top: $handle-top-no-marker;                 }
            .grid   { top: $handle-top-no-marker + $handle-height; }
        }

        /****************************************************
        Special case for no marker and pin:
        Adjust all top-position by adding top-margin if the pin is heigher than the handle
        ****************************************************/
        &.no-marker.has-pin {
            margin-top: max(0, - $pin-margin-top - $lineTopNoMarker);
        }
    } //end of .base-slider-container.#{$handle-type}
} //end of @each $handle-type in $handle-type-list


//Adding style depending on $max-handle-width
.base-slider-container {
    width       : calc(100% - #{$max-handle-width});
    margin-left : $max-handle-width/2;
    margin-right: $max-handle-width/2;
}