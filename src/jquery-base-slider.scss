/***********************************************
jquery-base-slider.scss, Description from README.md

    (c) 2015, Niels Holt

    https://github.com/NielsHolt/jquery-base-slider
    https://github.com/NielsHolt

There are four different types of sliders:
default, small, round and range

The type is set by adding the same class-name to the outer <span> eq. <span class="base-slider round....">

The scss is divided in two parts: First the common part equal for all types and then a specified part for the different types

************************************************/
//BOURBON - http://bourbon.io/
@import "../bower_components/bourbon/app/assets/stylesheets/bourbon";


@function myRem($pxval) {
  $base: 16;
  $em-base: 16px;
  @return ($pxval / $em-base) * 1rem;
}


//'Global' variables
$border-color    : rgb(175,179,187);
$shadow-color    : rgb(175,179,187);
$background-color: rgb(209,214,224);

//marker = small boxes over min- and max and from- anf to-slider
$markerTop              : myRem(0px);
$markerFontSize         : myRem(10px);
$markerLineHeight       : 1.333;
$markerTopBottomPadding : myRem(1px);
$markerBorderSize       : myRem(1px);
$markerStickHeight      : myRem(3px);

$markerHeight           : $markerBorderSize + $markerTopBottomPadding + $markerFontSize*$markerLineHeight + $markerTopBottomPadding + $markerBorderSize + $markerStickHeight;

//slider
$sliderTop        : $markerTop + $markerHeight;
$sliderTopNoMarker: $markerTop;

//The line
$lineHeight      : myRem(6px);
$lineBorderSize  : myRem(1px);
$lineBorderRadius: myRem(2px);

//The line when it is a range-slider
$rangeLineTop        : $markerHeight;
$rangeLineTopNoMarker: myRem(0px);

//Special: Pin marking a value
$pinHeight   : 48 / 28 * $lineHeight;  //The height of the pin used to mark the range-value. Calculated to fit with width=$lineHeight
$pinMarginTop: -0.8 * $pinHeight; 

$rangeValueLineTop: $markerHeight;


//Ticks on grids
$tickHeightMinor: $lineHeight;
$tickHeight     : 1.5 * $tickHeightMinor;
$labelFontSize  : myRem(9px);
$labelHeight    : 1.2 * $labelFontSize;
$margin         : myRem(2px);

//Font-icons from http://fontello.com/
@font-face {
  font-family: 'range-slider';
    src: url('data:application/octet-stream;base64,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') format('woff'),
           url('data:application/octet-stream;base64,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sgEAQSstsE0ssgEBQSstsE4ssgAAQistsE8ssgABQistsFAssgEAQistsFEssgEBQistsFIssgAAPistsFMssgABPistsFQssgEAPistsFUssgEBPistsFYssgAAQCstsFcssgABQCstsFgssgEAQCstsFkssgEBQCstsFossgAAQystsFsssgABQystsFwssgEAQystsF0ssgEBQystsF4ssgAAPystsF8ssgABPystsGAssgEAPystsGEssgEBPystsGIssDcrLrErARQrLbBjLLA3K7A7Ky2wZCywNyuwPCstsGUssAAWsDcrsD0rLbBmLLA4Ky6xKwEUKy2wZyywOCuwOystsGgssDgrsDwrLbBpLLA4K7A9Ky2waiywOSsusSsBFCstsGsssDkrsDsrLbBsLLA5K7A8Ky2wbSywOSuwPSstsG4ssDorLrErARQrLbBvLLA6K7A7Ky2wcCywOiuwPCstsHEssDorsD0rLbByLLMJBAIDRVghGyMhWUIrsAhlsAMkUHiwARUwLQBLuADIUlixAQGOWbABuQgACABjcLEABUKxAAAqsQAFQrEACCqxAAVCsQAIKrEABUK5AAAACSqxAAVCuQAAAAkqsQMARLEkAYhRWLBAiFixA2REsSYBiFFYugiAAAEEQIhjVFixAwBEWVlZWbEADCq4Af+FsASNsQIARAA=') format('truetype');
}

/***************************************************************
COMMON STYLE
***************************************************************/
.base-slider {
    position   : relative; 
    display    : block;
    user-select: none;

    .line {
        position: relative; 
        display: block;
        overflow: hidden;
        outline: none !important;
        box-sizing: border-box;
        height: $lineHeight; 

        border: solid $lineBorderSize $border-color;
        @include border-right-radius($lineBorderRadius);
        @include border-left-radius($lineBorderRadius);
        box-shadow: inset 0px myRem(1px) myRem(1px) 0 $shadow-color; 

        background-color: $background-color;
        cursor: pointer;

        .line-left {
            position: absolute; 
            display: none;
            top: 0;
            left: 0; 
            width: 11%;
            height: 100%;
        } 
    } //end of .line

    //Adjust display and background-color when impact or impact-revers is set
    &.impact-line .line, &.impact-line-reverse .line {
        .line-left { display: block; }
    }

    &.impact-line .line {
        .line-left { background-color: green; }
        background-color: red;
    }
    
    &.impact-line-reverse .line {
        .line-left { background-color: red; }
        background-color: green;
    }

    .bar {
        position  : absolute; 
        display   : block;
        box-sizing: border-box;
        left      : 0; 
        width     : 0;
        height    : $lineHeight; 

        border: solid $lineBorderSize $border-color;
        @include border-left-radius($lineBorderRadius);
        border-right: none;
        cursor: pointer;

        background-color: #428BCA;
        &.hide-bar-color { background-color: inherit }
    }

    &.impact-line .bar, &.impact-line-reverse .bar {
        background-color: yellow;
    }
    

    //Adjust cursor when slider is disabled or read-only
    &.disabled .line,
    &.disabled .bar,
    &.read-only .line,
    &.read-only .bar { 
        cursor: default;
    } 


    //The slider
    .slider {
        position: absolute; 
        display : block;
        cursor  : default;
        z-index : 10;
        top     : $sliderTop;

        background-size: 100% 100%;
        background-repeat: no-repeat;

        &.type_last { z-index: 12; }

    } //end of .slider

    &.active .slider { cursor: pointer;     }

    //Special version when slider == 'range' and/or when a pin is added: using font-icons instead of background-image
    &.range .slider,
    & .pin {
        position: absolute; 
        cursor  : default !important;
        z-index : 100;

        //Slider with font-icon
        font-family    : "range-slider";
        font-size      : $lineHeight;
        font-style     : normal;
        font-weight    : normal;
        font-variant   : normal;
        text-transform : none;
        speak          : none;
        text-decoration: inherit;
 
        display: inline-block;

        text-align : center;
        line-height: 1em;
 
        &.from {
            text-align: right;
            &:before { content: '\e801'; } // |< 
        }
        &.to { 
            text-align: left;
            &:before { content: '\e800'; } // >| 
        }

        &.pin { 
            height    : $pinHeight !important;
            margin-top: $pinMarginTop;
        
            font-size : $pinHeight;
            text-align: center;

            background-image: none !important;

            &:before { content: '\e802'; } // marker 
        }
    } //end of .range-slider


    //Marker: Current, min and max-marker/labels
    .marker-min, .marker-max {
        position        : absolute; 
        display         : block;
        cursor          : default;
        color           : #555;
        font-family     : Arial, sans-serif; 
        font-size       : $markerFontSize; 
        line-height     : $markerLineHeight;
        text-shadow     : none;
        top             : $markerTop; 
        padding         : $markerTopBottomPadding myRem(3px);
        border          : solid $markerBorderSize $border-color;
        background-color: $background-color;
        border-radius   : myRem(2px);

        &.marker-min { left: 0;  }
        &.marker-max { right: 0; }
    }

    .marker-from, .marker-to, .marker-single {
        position   : absolute; 
        display    : block;
        top        : $markerTop + $markerBorderSize; 
        left       : 0;
        cursor     : default;
        white-space: nowrap;
        color      : #111;
        font-family: Arial, sans-serif; 
        font-size  : $markerFontSize; 
        line-height: $markerLineHeight;
        text-shadow: none;
        padding    : $markerTopBottomPadding myRem(5px);
    }
    
    //If not force edge => add border and stick
    //.marker-frame & {
    &.marker-frame .marker-from, 
    &.marker-frame .marker-to, 
    &.marker-frame .marker-single {
        top          : $markerTop; 
        background   : white;
        border       : $markerBorderSize solid black;
        border-radius: myRem(4px);
        &:after {
            position        : absolute; 
            display         : block; 
            content         : "";
            bottom          : -2.3*$markerStickHeight; 
            left            : 50%;
            width           : 0; 
            height          : 0;
            margin-left     : -1*$markerStickHeight;
            overflow        : hidden;
            border          : $markerStickHeight solid transparent;
            border-top-color: black;
        }
    }
} //end of .base-slider



.grid {
    position: absolute; 
    bottom  : 0; 
    left    : 0;
    z-index : 2;
    width   : 100%; 
    height  : $tickHeight + $margin + $labelHeight; 
    &.text-between-ticks { 
        height: $margin + max($tickHeight, $labelHeight); 
        .grid-text { top: $margin; }; 
    }
    
    .grid-pol {
        position  : absolute;
        top       : 0; 
        left      : 0;
        width     : myRem(1px); 
        height    : $tickHeight;
        background: black; 

        &.minor { height: $tickHeightMinor; background: #555555; }
        &.red   { background: red; }
    }

    .grid-text {
        position: absolute;
        top     : $tickHeight + $margin;
        &.low { 
            top: $tickHeight + $margin + $labelHeight + $margin; 
        }

        left: 0;
        white-space: nowrap;
        text-align : center;
        font-family: Arial, sans-serif; 

        font-size  : $labelFontSize; 
        line-height: 1; 
        font-weight: bold;
        &.minor  { font-weight: normal; color: #555555;}
        &.italic { font-style: italic; }

        padding: 0;
        
        color: #000;
        cursor: default; 
        &.clickable { cursor: pointer; }
    }
} //end of .grid


.disabled {
    opacity: 0.4;
}


.hidden-input {
    position    : absolute !important;
    display     : block !important;
    top         : 0 !important;
    left        : 0 !important;
    width       : 0 !important;
    height      : 0 !important;
    font-size   : 0 !important;
    line-height : 0 !important;
    padding     : 0 !important;
    margin      : 0 !important;
    outline     : none !important;
    z-index     : -9999 !important;
    background  : none !important;
    border-style: solid !important;
    border-color: transparent !important;
}

/***************************************************************
STYLE FOR SPECIFIC TYPE
***************************************************************/
$sliderTypeList: default, small, round, range;

@each $sliderType in $sliderTypeList {
    $sliderWidth                : null; 
    $sliderHeight               : null;
    $lineTopRelativeToSlider    : null;
    $sliderBackgroundImage      : null;
    $sliderBackgroundImage_hover: null;

    @if $sliderType == default {
    //TYPE == default            
        $sliderWidth : myRem(11px); 
        $sliderHeight: myRem(18px);
        $lineTopRelativeToSlider: $sliderHeight/2 - $lineHeight/2;

        $sliderBackgroundImage      : url("images/slider.default.png");
        $sliderBackgroundImage_hover: url("images/slider.default.hover.png");

    } @else if $sliderType == small {
    //TYPE == small
        $sliderWidth : myRem(13px); 
        $sliderHeight: myRem(15px); 
        $lineTopRelativeToSlider: $lineBorderRadius;

        $sliderBackgroundImage      : url("images/slider.small.png");
        $sliderBackgroundImage_hover: url("images/slider.small.hover.png");

    } @else if $sliderType == round {
    //TYPE == round
        $sliderWidth : myRem(12px);
        $sliderHeight: myRem(12px);
        $lineTopRelativeToSlider: $sliderHeight/2 - $lineHeight/2; 

        $sliderBackgroundImage      : url("images/slider.round.png");
        $sliderBackgroundImage_hover: url("images/slider.round.hover.png"); 


    } @else if $sliderType == range {
    //TYPE == range
        $sliderHeight: $lineHeight; 
        $sliderWidth : $sliderHeight; 
        $lineTopRelativeToSlider: $sliderHeight/2 - $lineHeight/2; 
    }

    $lineTop        : $sliderTop         + $lineTopRelativeToSlider;
    $lineTopNoMarker: $sliderTopNoMarker + $lineTopRelativeToSlider;

    //The style for different slider-type
    .base-slider.#{$sliderType} {
       
        //width, height and postion    
        .line, .bar {
            top: $lineTop;
        }
        .slider {
            width : $sliderWidth; 
            height: $sliderHeight;
            background-image: $sliderBackgroundImage;
        }

        .pin { 
            top: $lineTop;                    
        }

        //hover on slider but only if it is active (not read-only)
        &.active .slider {
            &.state_hover, &:hover { 
                background-image: $sliderBackgroundImage_hover;
            } 
        }
        .grid {
            top: $sliderTop + $sliderHeight;
        }


        //Adjust grid position if ticks are on the line (ticks_on_line = true)
        &.ticks-on-line {
            .grid             { top: $lineTop;         }
            &.no-marker .grid { top: $lineTopNoMarker; }
        }

        //Adjust all top-position if there are no marker
        &.no-marker {
            .line, 
            .bar,
            .pin    { top: $lineTopNoMarker !important;        }
            .slider { top: $sliderTopNoMarker;                 }
            .grid   { top: $sliderTopNoMarker + $sliderHeight; }
        }

        /****************************************************
        Special case for no marker and pin: 
        Adjust all top-position by adding top-margin if the pin is heigher than the slider
        ****************************************************/
        &.no-marker.has-pin {
            margin-top: max(0, - $pinMarginTop - $lineTopNoMarker);
        }
    } //end of .base-slider.#{$sliderType}
} //end of @each $sliderType in $sliderTypeList 
